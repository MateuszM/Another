  /* TO DO :
    * Take From Database Only Needed Record , No need for whole list when controller is initialized every Request
    * Make Saving Diary to Database 
    * Make Diary For A User
    * Retrieve Diary for user 
	* Create proper main view
	* Check Concurency Issues
	* Add User
	* Diary view only after login authorization
	* Maybe Add Pagination for diary ?
	* Maybe Add cryptography for password
	* Allow user to create diary , add/edit/delete pages
	* Add Ninject
	* Add Extension Method to GridMVC 
	* Add UnitTest / mocking
	* Nested Grid and change buttons (https://github.com/NonFactors/MVC6.Grid/issues/20) will come in handy
	* Add correct actions for buttons in controller 
	

	DONE : 
	* DropDownList 
	* RichTextEditor
	* Fixed DropDownList

	* Added Change Panges Buttons
	* Changed DiaryModel to PageModel
	* Added DiaryModel
	* Added GridMvc for Diary Page

	* Fixed GridMVC
	* Added RepositoryPattern and UnitOfWork
	* Added New Migration , fixed Models , added simple data to database
	* Create Diary 

	* Added Button for mvcgrid as Html.ActionLink


	
	Problem : 
	Should I add Second DB context ? 
	Is UnitOfWork and repository pattern needed  ? //need diging
	With one Db context (current default applicationDbContext) A can directly pass it to every controller , context is disposed per request. With unit of work it will be one db context.
	Maybe good for mocking?
	<a asp-action> and onclick with button didnt work for mvc grid , Why ?
	Dont know how to use Mvc.Grid extensions for mvc grid. Need to take some time with it.  Deleted it as for now is no longer needed.